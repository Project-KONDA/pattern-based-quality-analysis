<web-app
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	version="4.0">
	
	
	<servlet>
	     <servlet-name>InitialisationServlet</servlet-name>
	     <servlet-class>qualitypatternmodel.newservlets.InitialisationServlet</servlet-class>
	     <load-on-startup>1</load-on-startup>
 	</servlet>
	<servlet-mapping>
		<servlet-name>InitialisationServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>InitialisationServlet</servlet-name>
		<url-pattern>/health</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>InitialisationServlet</servlet-name>
		<url-pattern>/status</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>DocumentationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.DocumentationServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DocumentationServlet</servlet-name>
		<url-pattern>/docs</url-pattern>
	</servlet-mapping>

	<!--
		format: xml, rdf, neo4j
		level: all, abstract, semi-concrete, concrete 
	-->
 
	<!-- 
		Copy existing constraint
		- PUT /constraint/copy/<technology>/<constraintId>
	 -->
	<servlet>
		<servlet-name>ConstraintCopyServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.ConstraintCopyServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConstraintCopyServlet</servlet-name>
		<url-pattern>/constraint/copy/*</url-pattern>
	</servlet-mapping>
	
	<!-- 
		Request information about a certain constraint
		- GET /constraint/<technology>/<constraintId>
		Post parameter
		- POST /constraint/<technology>/<constraintId>
		Delete existing constraint
		- DELETE /constraint/<technology>/<constraintId> 
	 -->
	<servlet>
		<servlet-name>ConstraintServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.ConstraintServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConstraintServlet</servlet-name>
		<url-pattern>/constraint/*</url-pattern>
	</servlet-mapping>
	
	<!--
		Get database of constraint
		- GET /constraint/database/<technology>/<constraintId>
		Specify database of a constraint
		- PUT /constraint/database/<technology>/<constraintId>
	 -->
	<servlet>
		<servlet-name>ConstraintDatabaseServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.ConstraintDatabaseServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConstraintDatabaseServlet</servlet-name>
		<url-pattern>/constraint/database/*</url-pattern>
	</servlet-mapping>
	
	<!-- 
		Get datamodel of constraint
		- GET /constraint/datamodel/<technology>/<constraintId>
		Specify database of a constraint
		- PUT /constraint/datamodel/<technology>/<constraintId>
	 -->
	<servlet>
		<servlet-name>ConstraintDataModelServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.ConstraintDataModelServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConstraintDataModelServlet</servlet-name>
		<url-pattern>/constraint/datamodel/*</url-pattern>
	</servlet-mapping>
		
	<!-- Request list of templates and/or constraints
		- GET /pattern/list/<technology>/<level>
	 -->
	<servlet>
		<servlet-name>PatternListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.PatternListServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>PatternListServlet</servlet-name>
		<url-pattern>/pattern/list/*</url-pattern>
	</servlet-mapping>
		
	<!-- Add one or more variants to a template
		- PUT .. /template/addvariant/<technology>/<constraintId> {"variants": ?}
	-->
	<servlet>
		<servlet-name>TemplateVariantServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateVariantServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateVariantServlet</servlet-name>
		<url-pattern>/template/variant/*</url-pattern>
	</servlet-mapping>
		
	<!-- 
		Instantiate new instance of a template
		- PUT /templates/instantiate/<technology>/<templateId>
	 -->
	<servlet>
		<servlet-name>TemplateInstantiateServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateInstantiateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateInstantiateServlet</servlet-name>
		<url-pattern>/template/instantiate/*</url-pattern>
	</servlet-mapping>
		
	<!-- 
		Specify name of a constraint
		- POST /constraint/name/<technology>/<constraintId>
	 -->
	<servlet>
		<servlet-name>ConstraintNameServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.ConstraintNameServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConstraintNameServlet</servlet-name>
		<url-pattern>/constraint/name/*</url-pattern>
	</servlet-mapping>
		
	<!-- add (PUT) or remove (DELETE) one or more tags to a constraint
		/constraint/tag/<technology>/<constraintId> {"tag": ?}
	-->
	<servlet>
		<servlet-name>ConstraintTagServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.ConstraintTagServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConstraintTagServlet</servlet-name>
		<url-pattern>/constraint/tag/*</url-pattern>
	</servlet-mapping>
	
	
	<!-- request MQAF constraint of a certain ready constraint
		/template/get/<technology>/<constraintId>
	-->
	<servlet>
		<servlet-name>ConstraintMqafServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.ConstraintMqafServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConstraintMqafServlet</servlet-name>
		<url-pattern>/constraint/mqaf/*</url-pattern>
	</servlet-mapping>
	
	<!-- request generated query of a certain ready constraint
		/template/get/<technology>/<constraintId>
	-->
	<servlet>
		<servlet-name>ConstraintQueryServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.ConstraintQueryServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConstraintQueryServlet</servlet-name>
		<url-pattern>/constraint/query/*</url-pattern>
	</servlet-mapping>
	
	<!-- request generated query of a certain ready constraint
		/template/get/<technology>/<constraintId>
	-->
	<servlet>
		<servlet-name>ConstraintExecuteServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.ConstraintExecuteServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>ConstraintExecuteServlet</servlet-name>
		<url-pattern>/constraint/execute/*</url-pattern>
	</servlet-mapping>
	
	
	<!-- 
	<servlet>
		<servlet-name>AbstractPatternListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.AbstractPatternListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>AbstractPatternListServlet</servlet-name>
		<url-pattern>/xml/abstract-patterns</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ConcretePatternListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternListServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns</url-pattern>
	</servlet-mapping>	
	
	<servlet>
		<servlet-name>AbstractPatternInstantiationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.AbstractPatternInstantiationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>AbstractPatternInstantiationServlet</servlet-name>
		<url-pattern>/xml/abstract-patterns/instantiation/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ConcretePatternDeletionServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternDeletionServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternDeletionServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/deletion/*</url-pattern>
	</servlet-mapping>	
	
	<servlet>
		<servlet-name>ConcretePatternTextServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternTextServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternTextServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/text/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>AbstractPatternTextDeletionServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.AbstractPatternTextDeletionServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>AbstractPatternTextDeletionServlet</servlet-name>
		<url-pattern>/xml/abstract-patterns/text/deletion/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ConcretisationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretisationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretisationServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/parameter/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>AbstractPatternTextListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.AbstractPatternTextListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>AbstractPatternTextListServlet</servlet-name>
		<url-pattern>/xml/abstract-patterns/text-list/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ConcretePatternTextListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternTextListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternTextListServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/text-list/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>ConcretisationFinalizationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretisationFinalizationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretisationFinalizationServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/finalization/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>QueryServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.QueryServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>QueryServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/query/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>FinalizedPatternListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.FinalizedPatternListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>FinalizedPatternListServlet</servlet-name>
		<url-pattern>/xml/finalized-patterns</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>FinalizedPatternDatabaseServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.FinalizedPatternDatabaseServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>FinalizedPatternDatabaseServlet</servlet-name>
		<url-pattern>/xml/finalized-patterns/database/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>ParameterExplanationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ParameterExplanationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ParameterExplanationServlet</servlet-name>
		<url-pattern>/parameter-explanations</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>ConcretePatternDescriptionServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternDescriptionServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternDescriptionServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/description/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabasesListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabasesListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabasesListServlet</servlet-name>
		<url-pattern>/xml/databases</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabasesRegistrationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabasesRegistrationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabasesRegistrationServlet</servlet-name>
		<url-pattern>/xml/databases/registration/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabaseDeletionServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabaseDeletionServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabaseDeletionServlet</servlet-name>
		<url-pattern>/xml/databases/deletion/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabaseSettingServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabaseSettingServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabaseSettingServlet</servlet-name>
		<url-pattern>/xml/databases/set/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabaseGettingServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabaseGettingServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabaseGettingServlet</servlet-name>
		<url-pattern>/xml/databases/get/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>SchemaValidationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.SchemaValidationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>SchemaValidationServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/schema-validation/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>PatternApplicationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.PatternApplicationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>PatternApplicationServlet</servlet-name>
		<url-pattern>/xml/finalized-patterns/application</url-pattern>
	</servlet-mapping>
	-->
	
	<filter>
	  <filter-name>CorsFilter</filter-name>
	  <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
	  <init-param>
	    <param-name>cors.allowed.origins</param-name>
	    <param-value>*</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.allowed.methods</param-name>
	    <param-value>GET,POST,HEAD,OPTIONS,PUT,DELETE</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.allowed.headers</param-name>
	    <param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.exposed.headers</param-name>
	    <param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.support.credentials</param-name>
	    <param-value>false</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.preflight.maxage</param-name>
	    <param-value>10</param-value>
	  </init-param>
	</filter>
	<filter-mapping>
	  <filter-name>CorsFilter</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>