<web-app
	xmlns="http://xmlns.jcp.org/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
	version="4.0">
	
	<!--
		format: xml, rdf, neo4j
		level: all, abstract, semi-concrete, concrete 
	-->
	
	
	<!-- Add a new database
		/database/add/<technology>
	 -->
<!--	<servlet>-->
<!--		<servlet-name>DatabaseAddServlet</servlet-name>-->
<!--		<servlet-class>qualitypatternmodel.newservlets.DatabaseAddServlet</servlet-class>-->
<!--	</servlet>-->
<!--	<servlet-mapping>-->
<!--		<servlet-name>DatabaseAddServlet</servlet-name>-->
<!--		<url-pattern>/database/add/*</url-pattern>-->
<!--	</servlet-mapping>-->
	
	<!-- Delete database
		/database/delete/<technology>
	 -->
<!--	<servlet>-->
<!--		<servlet-name>DatabaseDeleteServlet</servlet-name>-->
<!--		<servlet-class>qualitypatternmodel.newservlets.DatabaseDeleteServlet</servlet-class>-->
<!--	</servlet>-->
<!--	<servlet-mapping>-->
<!--		<servlet-name>DatabaseDeleteServlet</servlet-name>-->
<!--		<url-pattern>/database/delete/*</url-pattern>-->
<!--	</servlet-mapping>-->
	
	<!-- Add a new database
		/database/getlist/<technology> {database data}
	 -->
<!--	<servlet>-->
<!--		<servlet-name>DatabaseGetListServlet</servlet-name>-->
<!--		<servlet-class>qualitypatternmodel.newservlets.DatabaseGetListServlet</servlet-class>-->
<!--	</servlet>-->
<!--	<servlet-mapping>-->
<!--		<servlet-name>DatabaseGetListServlet</servlet-name>-->
<!--		<url-pattern>/database/getlist/*</url-pattern>-->
<!--	</servlet-mapping>-->
	
	 <servlet>
	     <servlet-name>TemplateInitialisationServlet</servlet-name>
	     <servlet-class>qualitypatternmodel.newservlets.TemplateInitialisationServlet</servlet-class>
	     <load-on-startup>1</load-on-startup>
 	</servlet>
 
	<!-- Copy existing semi-concrete template
		/template/copy/<technology>/<name>
	 -->
	<servlet>
		<servlet-name>TemplateCopyServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateCopyServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateCopyServlet</servlet-name>
		<url-pattern>/template/copy/*</url-pattern>
	</servlet-mapping>
	
	<!-- Delete existing semi-concrete template
		/template/delete/<technology>/<name>
	 -->
	<servlet>
		<servlet-name>TemplateDeleteServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateDeleteServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateDeleteServlet</servlet-name>
		<url-pattern>/template/delete/*</url-pattern>
	</servlet-mapping>
	
	<!-- Execute existing concrete template
		/database/execute/<technology>/<name>
	 -->
	<servlet>
		<servlet-name>TemplateExecuteServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateExecuteServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateExecuteServlet</servlet-name>
		<url-pattern>/template/execute/*</url-pattern>
	</servlet-mapping>
	
	<!-- Get database of semi-concrete template
		/database/execute/<technology>/<name>
	 -->
	<servlet>
		<servlet-name>TemplateGetDatabaseServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateGetDatabaseServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateGetDatabaseServlet</servlet-name>
		<url-pattern>/template/getdatabase/*</url-pattern>
	</servlet-mapping>
		
	<!-- Request list of templates
		/templates/getlist/<format>/<level>
	 -->
	<servlet>
		<servlet-name>TemplateGetListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateGetListServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateGetListServlet</servlet-name>
		<url-pattern>/template/getlist/*</url-pattern>
	</servlet-mapping>
		
	<!-- Request parameters and values of a template
		/templates/getlist/<format>/<level>
	 -->
	<servlet>
		<servlet-name>TemplateGetParameterServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateGetParameterServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateGetParameterServlet</servlet-name>
		<url-pattern>/template/getparameter/*</url-pattern>
	</servlet-mapping>
		
	<!-- Post new instance of an abstract template
		/templates/instantiate/<technology>/<abstracttemplate>
	 -->
	<servlet>
		<servlet-name>TemplateInstantiateServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateInstantiateServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateInstantiateServlet</servlet-name>
		<url-pattern>/template/instantiate/*</url-pattern>
	</servlet-mapping>
		
	<!-- Post new instance of an abstract template
		/template/setdatabase/<technology>/<name>
	 -->
	<servlet>
		<servlet-name>TemplateSetDatabaseServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateSetDatabaseServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateSetDatabaseServlet</servlet-name>
		<url-pattern>/template/setdatabase/*</url-pattern>
	</servlet-mapping>
		
	<!-- Post new instance of an abstract template
		/template/setname/<technology>/<name>
	 -->
	<servlet>
		<servlet-name>TemplateSetNameServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateSetNameServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateSetNameServlet</servlet-name>
		<url-pattern>/template/setname/*</url-pattern>
	</servlet-mapping>
		
	<!-- Post new instance of an abstract template
		/template/setmodel/<technology>/<name>
	 -->
	<servlet>
		<servlet-name>TemplateSetDataModelServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateSetDataModelServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateSetDataModelServlet</servlet-name>
		<url-pattern>/template/setdatamodel/*</url-pattern>
	</servlet-mapping>
		
	<!-- Change one or more parameters
		/template/setparameter/<technology>/<name>/
	-->
	<servlet>
		<servlet-name>TemplateSetParameterServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateSetParameterServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateSetParameterServlet</servlet-name>
		<url-pattern>/template/setparameter/*</url-pattern>
	</servlet-mapping>
		
	<!-- add a tag
		/template/addtag/<technology>/<name>/ {"tag": ?}
	-->
	<servlet>
		<servlet-name>TemplateAddTagServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateAddTagServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateAddTagServlet</servlet-name>
		<url-pattern>/template/addtag/*</url-pattern>
	</servlet-mapping>
		
	<!-- remove a tag
		/template/removetag/<technology>/<name>/ {"tag": ?}
	-->
	<servlet>
		<servlet-name>TemplateRemoveTagServlet</servlet-name>
		<servlet-class>qualitypatternmodel.newservlets.TemplateRemoveTagServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>TemplateRemoveTagServlet</servlet-name>
		<url-pattern>/template/removetag/*</url-pattern>
	</servlet-mapping>
	
	
	
	
	
	
	<!-- 
	<servlet>
		<servlet-name>AbstractPatternListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.AbstractPatternListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>AbstractPatternListServlet</servlet-name>
		<url-pattern>/xml/abstract-patterns</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ConcretePatternListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternListServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns</url-pattern>
	</servlet-mapping>	
	
	<servlet>
		<servlet-name>AbstractPatternInstantiationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.AbstractPatternInstantiationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>AbstractPatternInstantiationServlet</servlet-name>
		<url-pattern>/xml/abstract-patterns/instantiation/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ConcretePatternDeletionServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternDeletionServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternDeletionServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/deletion/*</url-pattern>
	</servlet-mapping>	
	
	<servlet>
		<servlet-name>ConcretePatternTextServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternTextServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternTextServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/text/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>AbstractPatternTextDeletionServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.AbstractPatternTextDeletionServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>AbstractPatternTextDeletionServlet</servlet-name>
		<url-pattern>/xml/abstract-patterns/text/deletion/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ConcretisationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretisationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretisationServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/parameter/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>AbstractPatternTextListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.AbstractPatternTextListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>AbstractPatternTextListServlet</servlet-name>
		<url-pattern>/xml/abstract-patterns/text-list/*</url-pattern>
	</servlet-mapping>
	
	<servlet>
		<servlet-name>ConcretePatternTextListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternTextListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternTextListServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/text-list/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>ConcretisationFinalizationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretisationFinalizationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretisationFinalizationServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/finalization/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>QueryServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.QueryServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>QueryServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/query/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>FinalizedPatternListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.FinalizedPatternListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>FinalizedPatternListServlet</servlet-name>
		<url-pattern>/xml/finalized-patterns</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>FinalizedPatternDatabaseServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.FinalizedPatternDatabaseServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>FinalizedPatternDatabaseServlet</servlet-name>
		<url-pattern>/xml/finalized-patterns/database/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>ParameterExplanationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ParameterExplanationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ParameterExplanationServlet</servlet-name>
		<url-pattern>/parameter-explanations</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>ConcretePatternDescriptionServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.ConcretePatternDescriptionServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>ConcretePatternDescriptionServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/description/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabasesListServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabasesListServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabasesListServlet</servlet-name>
		<url-pattern>/xml/databases</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabasesRegistrationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabasesRegistrationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabasesRegistrationServlet</servlet-name>
		<url-pattern>/xml/databases/registration/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabaseDeletionServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabaseDeletionServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabaseDeletionServlet</servlet-name>
		<url-pattern>/xml/databases/deletion/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabaseSettingServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabaseSettingServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabaseSettingServlet</servlet-name>
		<url-pattern>/xml/databases/set/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>DatabaseGettingServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.DatabaseGettingServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>DatabaseGettingServlet</servlet-name>
		<url-pattern>/xml/databases/get/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>SchemaValidationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.SchemaValidationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>SchemaValidationServlet</servlet-name>
		<url-pattern>/xml/concrete-patterns/schema-validation/*</url-pattern>
	</servlet-mapping>
	
	
	<servlet>
		<servlet-name>PatternApplicationServlet</servlet-name>
		<servlet-class>qualitypatternmodel.servlets.PatternApplicationServlet</servlet-class>
	</servlet>

	<servlet-mapping>
		<servlet-name>PatternApplicationServlet</servlet-name>
		<url-pattern>/xml/finalized-patterns/application</url-pattern>
	</servlet-mapping>
	-->
	
	<filter>
	  <filter-name>CorsFilter</filter-name>
	  <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
	  <init-param>
	    <param-name>cors.allowed.origins</param-name>
	    <param-value>*</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.allowed.methods</param-name>
	    <param-value>GET,POST,HEAD,OPTIONS,PUT,DELETE</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.allowed.headers</param-name>
	    <param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,Authorization</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.exposed.headers</param-name>
	    <param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.support.credentials</param-name>
	    <param-value>false</param-value>
	  </init-param>
	  <init-param>
	    <param-name>cors.preflight.maxage</param-name>
	    <param-value>10</param-value>
	  </init-param>
	</filter>
	<filter-mapping>
	  <filter-name>CorsFilter</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>

</web-app>